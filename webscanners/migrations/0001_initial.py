# Generated by Django 3.2.15 on 2024-05-22 15:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('projects', '0001_initial'),
        ('user_management', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='cookie_db',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.TextField(blank=True)),
                ('cookie', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='excluded_db',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exclude_url', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='zap_spider_db',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spider_url', models.TextField(blank=True)),
                ('spider_scanid', models.TextField(blank=True)),
                ('urls_num', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='WebScansDb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scan_url', models.URLField(blank=True)),
                ('scan_id', models.UUIDField(blank=True)),
                ('rescan_id', models.TextField(blank=True, null=True)),
                ('scan_date', models.TextField(blank=True)),
                ('scan_status', models.TextField(blank=True)),
                ('total_vul', models.IntegerField(blank=True, null=True)),
                ('critical_vul', models.IntegerField(blank=True, null=True)),
                ('high_vul', models.IntegerField(blank=True, null=True)),
                ('medium_vul', models.IntegerField(blank=True, null=True)),
                ('low_vul', models.IntegerField(blank=True, null=True)),
                ('info_vul', models.IntegerField(blank=True, null=True)),
                ('date_time', models.DateTimeField(blank=True, null=True)),
                ('rescan', models.TextField(blank=True, null=True)),
                ('total_dup', models.TextField(blank=True, null=True)),
                ('scanner', models.TextField(blank=True, null=True)),
                ('updated_time', models.DateTimeField(auto_now=True)),
                ('created_time', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='web_scan_db_created', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='user_management.organization')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.projectdb')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='web_scan_db_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Web Scans',
                'db_table': 'webscandb',
            },
        ),
        migrations.CreateModel(
            name='WebScanResultsDb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vuln_id', models.UUIDField(blank=True)),
                ('scan_id', models.UUIDField(blank=True)),
                ('rescan_id', models.TextField(blank=True, null=True)),
                ('url', models.TextField(blank=True)),
                ('title', models.TextField(blank=True)),
                ('solution', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('instance', models.TextField(blank=True)),
                ('reference', models.TextField(blank=True)),
                ('severity_color', models.TextField(blank=True)),
                ('severity', models.TextField(blank=True, null=True)),
                ('date_time', models.DateTimeField(null=True)),
                ('false_positive', models.TextField(blank=True, null=True)),
                ('jira_ticket', models.TextField(blank=True, null=True)),
                ('vuln_status', models.TextField(blank=True, null=True)),
                ('dup_hash', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('vuln_duplicate', models.TextField(blank=True, null=True)),
                ('false_positive_hash', models.TextField(blank=True, null=True)),
                ('scanner', models.TextField(editable=False)),
                ('updated_time', models.DateTimeField(auto_now=True, null=True)),
                ('created_time', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='web_scan_result_db_created', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='user_management.organization')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.projectdb')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='web_scan_result_db_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Web Scan Result Data',
                'db_table': 'webscanResultsdb',
            },
        ),
        migrations.CreateModel(
            name='web_scan_db',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scan_url', models.URLField(blank=True)),
                ('scan_id', models.UUIDField(blank=True)),
                ('scan_date', models.TextField(blank=True)),
                ('scan_status', models.TextField(blank=True)),
                ('total_vul', models.IntegerField(blank=True)),
                ('critical_vul', models.IntegerField(blank=True, null=True)),
                ('high_vul', models.IntegerField(blank=True)),
                ('medium_vul', models.IntegerField(blank=True)),
                ('low_vul', models.IntegerField(blank=True)),
                ('info_vuln', models.IntegerField(blank=True)),
                ('scanner', models.TextField(blank=True)),
                ('created_time', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='web_scans_db_created', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='user_management.organization')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.projectdb')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='web_scans_db_updated', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='task_schedule_db',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.TextField(blank=True, null=True)),
                ('target', models.TextField(blank=True, null=True)),
                ('schedule_time', models.TextField(blank=True, null=True)),
                ('scanner', models.TextField(blank=True, null=True)),
                ('periodic_task', models.TextField(blank=True, null=True)),
                ('created_time', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_sch_db_created', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='user_management.organization')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.projectdb')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_sch_db_updated', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='email_config_db',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_id_from', models.EmailField(blank=True, max_length=254)),
                ('email_subject', models.TextField(blank=True)),
                ('email_message', models.TextField(blank=True)),
                ('email_id_to', models.EmailField(blank=True, max_length=254)),
                ('created_time', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_config_db_created', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='user_management.organization')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_config_db_updated', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AutomationPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uu_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('context', models.CharField(default='', max_length=50)),
                ('description', models.TextField(blank=True)),
                ('target', models.CharField(max_length=100)),
                ('file_name', models.CharField(max_length=100)),
                ('zap_path', models.CharField(max_length=100)),
                ('project_uuid', models.CharField(max_length=100)),
                ('project_name', models.CharField(max_length=100)),
                ('created_time', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plan_db_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'af Plans',
                'db_table': 'afplandb',
            },
        ),
    ]
